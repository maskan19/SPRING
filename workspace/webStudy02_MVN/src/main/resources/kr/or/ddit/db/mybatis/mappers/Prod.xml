<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.IProdDAO">
	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<id property="prod_id" column="PROD_ID" />
		<association property="buyer" javaType="BuyerVO"
			autoMapping="true">
			<id property="buyer_id" column="BUYER_ID" />
		</association>
	</resultMap>
	<sql id="fromFrag">
		FROM PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
						INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
	</sql>
	
	
	
	<sql id="searchFrag">
		<trim prefix="where" prefixOverrides="AND">
			<if test="detailSearch neq null">
				<!-- <choose></choose>조건 중 한가지를 사용할 때 -->
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.prod_lgu)">
					and prod_lgu = #{detailSearch.prod_lgu}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.lprod_nm)">
					and lprod_nm = #{detailSearch.lprod_nm}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.prod_buyer)">
					and prod_buyer = #{detailSearch.prod_buyer}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.prod_name)">
					and INSTR(prod_name, #{detailSearch.prod_name}) >0
				</if> 
			</if>
		</trim>
	</sql>
	
	
	<select id="selectProdList" resultMap="prodMap"
		parameterType="kr.or.ddit.vo.PagingVO">
		SELECT B.*
		FROM (
			SELECT A.*, ROWNUM RNUM
			FROM(
				SELECT PROD_ID,
				LPROD_NM,
				PROD_NAME,
				BUYER_NAME,
				PROD_COST,
				PROD_PRICE,
				PROD_MILEAGE
				<include refid="fromFrag"></include>
<!-- 		<where> ==<trim prefix="where"> -->
		<include refid="searchFrag"></include>
			) A
		) B  
		<![CDATA[
		where rnum>=#{startRow} and rnum<=#{endRow}
		]]>
	</select>
	<select id="selectTotalRecord" resultType="int"  parameterType="PagingVO">
		SELECT COUNT(*)
		<include refid="fromFrag"></include>
<!-- 		<where> ==<trim prefix="where"> -->
		<include refid="searchFrag"></include>
	</select>

	<select id="selectProd" parameterType="string"
		resultMap="prodMap">
		SELECT
		PROD_ID, PROD_NAME, PROD_LGU
		, PROD_BUYER, PROD_COST,
		PROD_PRICE
		, PROD_SALE, PROD_OUTLINE, PROD_DETAIL
		, PROD_IMG,
		PROD_TOTALSTOCK, PROD_INSDATE
		, PROD_PROPERSTOCK, PROD_SIZE, PROD_COLOR
		, PROD_DELIVERY, PROD_UNIT, PROD_QTYIN
		, PROD_QTYSALE, PROD_MILEAGE
		, LPROD_NM, BUYER_ID, BUYER_NAME, BUYER_ADD1
		, BUYER_COMTEL,
		BUYER_CHARGER
		FROM PROD INNER JOIN LPROD ON (PROD_LGU =
		LPROD_GU)
		INNER
		JOIN BUYER ON (PROD_BUYER = BUYER_ID)
		WHERE PROD_ID = #{prod_id}
	</select>
	
	<insert id="insertProd" parameterType="ProdVO">
		<selectKey resultType="string" order="BEFORE" keyProperty="prod_id">
			SELECT #{prod_lgu} || LPAD(TO_NUMBER(SUBSTR(NVL(MAX(PROD_ID), LPAD('0', 10, '0')), LENGTH(#{prod_lgu})+1))+1, 6, '0')
			FROM PROD
			WHERE PROD_LGU = #{prod_lgu}
		</selectKey>
		INSERT INTO PROD (
		    PROD_ID,    PROD_NAME,
		    PROD_LGU,    PROD_BUYER,
		    PROD_COST,    PROD_PRICE,
		    PROD_SALE,    PROD_OUTLINE,
		    PROD_DETAIL,    PROD_IMG,
		    PROD_TOTALSTOCK,    PROD_INSDATE,
		    PROD_PROPERSTOCK,    PROD_SIZE,
		    PROD_COLOR,    PROD_DELIVERY,
		    PROD_UNIT,    PROD_QTYIN,
		    PROD_QTYSALE,    PROD_MILEAGE
		) VALUES (
			#{prod_id,jdbcType=VARCHAR},    #{prod_name,jdbcType=VARCHAR},
		    #{prod_lgu,jdbcType=VARCHAR},    #{prod_buyer,jdbcType=VARCHAR},
		    #{prod_cost,jdbcType=NUMERIC},    #{prod_price,jdbcType=NUMERIC},
		    #{prod_sale,jdbcType=NUMERIC},    #{prod_outline,jdbcType=VARCHAR},
		    #{prod_detail,jdbcType=VARCHAR},    #{prod_img,jdbcType=VARCHAR},
		    #{prod_totalstock,jdbcType=NUMERIC},    SYSDATE,
		    #{prod_properstock,jdbcType=NUMERIC},    #{prod_size,jdbcType=VARCHAR},
		    #{prod_color,jdbcType=VARCHAR},    #{prod_delivery,jdbcType=VARCHAR},
		    #{prod_unit,jdbcType=VARCHAR},    #{prod_qtyin,jdbcType=NUMERIC},
		    #{prod_qtysale,jdbcType=NUMERIC},    #{prod_mileage,jdbcType=NUMERIC}	
		)
	</insert>
	
	
	
</mapper>